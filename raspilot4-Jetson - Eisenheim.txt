#!/bin/bash
nmcli d wifi list
nmcli d wifi connect <WiFiSSID> password <WiFiPassword>
nmcli c
cd ~/
sudo apt-get update
sudo apt-get upgrade

# The next 8 lines are actually 1 long line
sudo apt-get install -y autoconf automake clang clang-3.8 libtool pkg-config build-essential \
 libatlas-base-dev xrdp libopenblas-base libopenblas-dev python-dev gcc gfortran python3-pip \
 bzip2 libavcodec-dev libavdevice-dev libavfilter-dev libavresample-dev libavutil-dev \
 libffi-dev libglib2.0-0 libssl-dev libswscale-dev libusb-1.0-0 ocl-icd-libopencl1 \
 ocl-icd-opencl-dev opencl-headers wget libusb-1.0-0-dev autotools-dev uuid-dev libpcre3-dev \
 libsodium-dev valgrind libarchive-dev python-qt4 libzmq5-dev capnproto libusb-dev \
 libssl-dev libffi-dev python-dev cmake libnewlib-arm-none-eabi libhdf5-serial-dev hdf5-tools \
 libhdf5-dev zlib1g-dev zip libjpeg8-dev python3-scipy smbclient python-pip

git clone https://github.com/gernby/private_OP openpilot
cd openpilot
git checkout jetson-bosch
#find . -name "*.o" -delete
sudo bash phonelibs/install_capnp.sh
pip install pipenv
export PATH="${HOME}/.local/bin:$PATH"
pipenv install
pipenv shell
pip install pandacan
export PYTHONPATH=~/raspilot
export PASSIVE=0
sudo mkdir /data
sudo mkdir /data/params
sudo chown gernby /data
sudo chown gernby /data/params
exit
sudo /bin/dd if=/dev/zero of=/var/swap.1 bs=1M count=1024
sudo /sbin/mkswap /var/swap.1
sudo chmod 600 /var/swap.1
sudo /sbin/swapon /var/swap.1

sudo -i
echo 'SUBSYSTEMS=="usb", ATTR{idVendor}=="bbaa", ATTR{idProduct}=="ddcc", MODE:="0666"' > /etc/udev/rules.d/11-panda.rules
exit
sudo udevadm control --reload-rules
cd ~/

sudo -H pip3 install --user numpy==1.16.1 future==0.17.1 mock==3.0.5 h5py==2.9.0 keras_preprocessing==1.0.5 keras_applications==1.0.8 gast==0.2.2 enum34 futures testresources setuptools protobuf cython setproctitle zmq sklearn cffi pycapnp
sudo -H pip3 install --user --pre --extra-index-url https://developer.download.nvidia.com/compute/redist/jp/v42 tensorflow-gpu==1.14.0+nv19.10
sudo -H pip3 install --user  keras scikit-learn pycapnp cffi

(crontab -l; echo "@reboot bash raspilot/launch_openpilot.sh";) | crontab -
crontab -l
cd ~/raspilot
pipenv run bash build_all.sh

#RPi4 specific
cp ~/raspilot/usercfg.txt /boot/firmware/usercfg.txt
https://wiki.debian.org/Multiarch/HOWTO

dpkg --add-architecture armhf
apt-get update
apt-get install influxdb
sudo service influxdb start

sudo apt-get install -y apt-transport-https
sudo apt-get install -y software-properties-common wget
wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -

# Alternatively you can add the beta repository, see in the table above
sudo add-apt-repository "deb https://packages.grafana.com/oss/deb stable main"

sudo apt-get update
sudo apt-get install grafana
sudo service grafana-server start

sudo systemctl daemon-reload
sudo systemctl start grafana-server
sudo systemctl status grafana-server

#sudo apt-get install -y adduser libfontconfig1
#wget https://dl.grafana.com/oss/release/grafana_6.6.1_arm64.deb
#sudo dpkg -i grafana_6.6.1_arm64.deb
pipenv install joblib Keras Keras-Applications==1.0.8 Keras-Preprocessing==1.1.0
#pipenv install keras_applications==1.0.5 keras_preprocessing==1.0.3 --no-deps 


wget https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tgz
tar -xvf Python-3.7.3.tgz
cd Python-3.7.3
./configure
make
sudo checkinstall
pip install -U --user keras_applications==1.0.8 --no-deps
pip install -U --user keras_preprocessing==1.1.0 --no-deps
wget https://github.com/lhelontra/tensorflow-on-arm/releases/download/v1.14.0-buster/tensorflow-1.14.0-cp37-none-linux_aarch64.whl &&\
python -m pip install ./tensorflow-1.14.0-cp37-none-linux_aarch64.whl
pip install Keras cython
pip install -U scikit-learn
